/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        
        int lengthA = length(headA);
        int lengthB = length(headB);
        ListNode returnNode = null;
        
        while(lengthA>lengthB){
           headA = headA.next;
           lengthA--;
        }
        
        while(lengthB>lengthA){
           headB = headB.next;
           lengthB--;
        }
        
        while(headA!=headB){
            headA = headA.next;
            headB = headB.next;
        }
        
        return headA;
    }
    
    int length(ListNode node){
        int count = 0;
        while(node!=null){
            node=node.next;
            count++;
        }
        return count;
    }
}
